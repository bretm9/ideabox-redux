{"version":3,"sources":["reducers/index.js","reducers/todos.js","containers/AddTodoForm.js","actions/index.js","containers/ToDoList.js","components/App.js","index.js"],"names":["rootReducer","combineReducers","todos","state","action","type","id","Date","now","todo","completed","AddTodoForm","props","handleChange","e","setState","target","value","submitForm","preventDefault","addToDo","onSubmit","this","placeholder","onChange","Component","connect","dispatch","text","todosToDisplay","map","i","key","App","className","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"6QAOeA,EAJKC,0BAAgB,CAClCC,MCJkB,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC1C,OAAQA,EAAOC,MACb,IAAK,WACH,MAAM,GAAN,mBAAWF,GAAX,CAAkB,CAAEG,GAAIC,KAAKC,MAAOC,KAAML,EAAOK,KAAMC,WAAW,KACpE,QACE,OAAOP,M,mCCDPQ,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAIRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEN,KAAMK,EAAEE,OAAOC,SANd,EASnBC,WAAa,SAACJ,GACZA,EAAEK,iBACF,EAAKP,MAAMQ,QAAQ,EAAKjB,MAAMM,MAC9B,EAAKM,SAAS,CAAEN,KAAM,MAVtB,EAAKN,MAAQ,CAAEM,KAAM,IAFJ,E,sEAgBjB,OACE,iCACE,0BAAMY,SAAUC,KAAKJ,YACnB,2BACED,MAAOK,KAAKnB,MAAMM,KAClBc,YAAY,aACZC,SAAUF,KAAKT,eACjB,kD,GAxBgBY,aAmCXC,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCP,QAAS,SAAAQ,GAAI,OAAID,ECpCa,CAC9BtB,KAAM,WACNI,KDkCmCmB,QAGtBF,CAAkCf,GEtBlCe,eAJS,SAAAvB,GAAK,MAAK,CAChCD,MAAOC,EAAMD,SAGAwB,EAfE,SAAC,GAAa,IACvBG,EADsB,EAAX3B,MACY4B,KAAI,SAACrB,EAAMsB,GACtC,OAAO,wBAAIC,IAAKD,GAAItB,EAAKA,SAE3B,OACE,4BACGoB,MCQQI,E,iLAVX,OACE,yBAAKC,UAAU,OACb,gDACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANUT,aCKZU,G,MAAQC,sBAAYpC,EAAaqC,kCAEvCC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.1c71c52b.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { todos } from './todos';\n\nconst rootReducer = combineReducers({\n  todos,\n});\n\nexport default rootReducer;","export const todos= (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, { id: Date.now(), todo: action.todo, completed: false }];\n    default: \n      return state;\n  }\n}","import React, { Component } from 'react'\nimport { addToDo } from '../actions';\nimport { connect } from 'react-redux';\n\nclass AddTodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { todo: '' };\n  }\n\n  handleChange = (e) => {\n    this.setState({ todo: e.target.value });\n  }\n\n  submitForm = (e) => {\n    e.preventDefault()\n    this.props.addToDo(this.state.todo)\n    this.setState({ todo: '' });\n  }\n\n  render() {\n    return (\n      <section>\n        <form onSubmit={this.submitForm}>\n          <input\n            value={this.state.todo}\n            placeholder=\"Add A Todo\"\n            onChange={this.handleChange} />\n          <button>Add Todo</button>\n        </form>\n      </section>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addToDo: text => dispatch( addToDo(text) )\n})\n\nexport default connect(null, mapDispatchToProps)(AddTodoForm);\n","export const addToDo = todo => ({\n  type: 'ADD_TODO',\n  todo\n});","import React from 'react';\nimport { connect } from 'react-redux';\nconst ToDoList = ({todos}) => {\n  const todosToDisplay = todos.map((todo, i) => {\n    return <li key={i}>{todo.todo}</li>\n  });\n  return (\n    <ul>\n      {todosToDisplay}\n    </ul>\n  )\n}\n\nconst mapStateToProps = state => ({\n  todos: state.todos\n});\n\nexport default connect(mapStateToProps)(ToDoList);","import React, { Component } from 'react';\nimport AddTodoForm from '../containers/AddTodoForm';\nimport TodoList from '../containers/ToDoList'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Another Todo Box</h1>\n        <AddTodoForm />\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport App from './components/App';\nimport './index.css';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}